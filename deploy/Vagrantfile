servers = [
  {
    :name => "server",
    :memory => 1024,
    :box => "ubuntu/jammy64",
    :cpus => 2,
    :ip => "192.168.56.20",
    :provision_playbook => "ami-provision.yml",
  },
  {
    :name => "db",
    :memory => 2048,
    :box => "ubuntu/jammy64",
    :cpus => 4,
    :ip => "192.168.56.21",
    :provision_playbook => "db-provision.yml",
  },
]
Vagrant.configure("2") do |config|
  server = servers[0]
  db = servers[1]
  config.vm.define server[:name] do |server_instance|
    server_instance.vm.box = server[:box]
    server_instance.vm.hostname = server[:name]
    server_instance.vm.network "private_network", ip: server[:ip]
    server_instance.vm.provider "virtualbox" do |v|
      v.memory = server[:memory]
      v.cpus = server[:cpus]
    end
    server_instance.vm.provision "ansible" do |ansible|
      ansible.playbook = server[:provision_playbook]
    end
    server_instance.vm.provision "shell" do |shell|
      script = <<-EOF
      set -euo pipefail
      mkdir -p /etc/todoapp
      cat << EOF > /etc/todoapp/.env
      DB_HOST=192.168.56.21
      DB_PORT=5432
      DB_USER=postgres
      DB_NAME=postgres
      DB_PASS=postgres
      EOF
      
      shell.inline = script
    end
  end

  config.vm.define db[:name] do |db_instance|
    db_instance.vm.box = db[:box]
    db_instance.vm.hostname = db[:name]
    db_instance.vm.network "private_network", ip: db[:ip]
    db_instance.vm.provider "virtualbox" do |v|
      v.memory = db[:memory]
      v.cpus = db[:cpus]
    end
    db_instance.vm.provision "ansible" do |ansible|
      ansible.playbook = db[:provision_playbook]
    end
  end
end
