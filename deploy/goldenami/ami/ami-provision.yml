---
- hosts: all
  become: true
  vars:
    bin_name: todoapi
    user: todoapi-user

    golang_migrate_version: "4.18.2"

  pre_tasks:
    - name: Update cache
      apt:
        update_cache: true
        cache_valid_time: 3600

    - name: Set timezone
      community.general.timezone:
        name: Europe/Kyiv

  tasks:

    # Backend tasks
    - name: Create user
      ansible.builtin.user:
        name: "{{ user }}"
        comment: "To-do app service user"
        system: true

    - name: Upload backend binary to destination
      ansible.builtin.copy:
        src: ../../../backend/build/todoapibin
        dest: "/usr/local/bin/{{ bin_name }}"
        mode: "0700"
        owner: "{{ user }}"
        group: "{{ user }}"

    - name: Upload unit file
      ansible.builtin.template:
        src: templates/todoapi.service.j2
        dest: /etc/systemd/system/todoapi.service
#        validate: systemd-analyze verify %s

    # Migrations
    - name: Upload SQL migration scripts
      ansible.builtin.copy:
        src: "../../../backend/database/migrations/"
        dest: "/usr/share/{{ bin_name }}/sql"
        mode: "0600"
        owner: "{{ user }}"
        group: "{{ user }}"
    
    - name: Download golang-migrate
      ansible.builtin.unarchive:
        remote_src: true
        src: "https://github.com/golang-migrate/migrate/releases/download/v{{ golang_migrate_version }}/migrate.linux-amd64.tar.gz"
        include: "migrate"
        dest: "/usr/local/bin"
        creates: "/usr/local/bin/migrate"
      register: golang_migrate

    - name: Upload migration script
      copy:
        src: migrate.sh
        dest: "/usr/local/bin/todoapi-migrate.sh"
        mode: "0700"
        owner: "{{ user }}"
        group: "{{ user }}"

    # Proxy tasks
    - name: Install nginx
      apt:
        name: nginx
        state: present

    - name: Upload nginx conf
      ansible.builtin.copy:
        src: todoapi.conf
        dest: /etc/nginx/conf.d/
      notify: restart_nginx

    - name: Enable nginx
      ansible.builtin.systemd_service:
        name: nginx
        enabled: true
        state: started

    # Frontend tasks
    - name: Upload built frontend
      ansible.builtin.copy:
        src: ../../../frontend/dist/
        dest: /usr/share/nginx/html/
        mode: "0755"
        owner: "{{ user }}"
        group: "{{ user }}"

  handlers:
    - name: restart_nginx
      ansible.builtin.systemd_service:
        name: nginx
        state: reloaded
